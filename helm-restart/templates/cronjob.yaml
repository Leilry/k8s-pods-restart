---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment-4
  namespace: "{{ .Values.namespace }}"
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: "{{ .Values.accountName.name }}"
  namespace: "{{ .Values.namespace }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ .Values.accountName.name }}"
  namespace: "{{ .Values.namespace }}"
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "patch", "list", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ .Values.accountName.name }}"
  namespace: "{{ .Values.job.namespace }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ .Values.accountName.name }}"
subjects:
  - kind: ServiceAccount
    name:  "{{ .Values.accountName.name }}"
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name:  "{{ .Values.job.name }}"
  namespace: "{{ .Values.job.namespace }}"
spec:
  concurrencyPolicy: Forbid
  schedule: "{{ .Values.job.schedule }}"
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName:  "{{ .Values.accountName.name }}"
          restartPolicy: Never
          containers:
            - name: kubectl
              image: bitnami/kubectl
              command: [ "/bin/sh", "-c" ]
              args: 
                - 'kubectl delete pod --field-selector=status.phase==Running'
